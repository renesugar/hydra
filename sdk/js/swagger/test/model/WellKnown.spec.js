/**
 * ORY Hydra - Cloud Native OAuth 2.0 and OpenID Connect Server
 * Welcome to the ORY Hydra HTTP API documentation. You will find documentation for all HTTP APIs here. Keep in mind that this document reflects the latest branch, always. Support for versioned documentation is coming in the future.
 *
 * OpenAPI spec version: Latest
 * Contact: hi@ory.am
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OryHydraCloudNativeOAuth20AndOpenIdConnectServer);
  }
}(this, function(expect, OryHydraCloudNativeOAuth20AndOpenIdConnectServer) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OryHydraCloudNativeOAuth20AndOpenIdConnectServer.WellKnown();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('WellKnown', function() {
    it('should create an instance of WellKnown', function() {
      // uncomment below and update the code to test WellKnown
      //var instane = new OryHydraCloudNativeOAuth20AndOpenIdConnectServer.WellKnown();
      //expect(instance).to.be.a(OryHydraCloudNativeOAuth20AndOpenIdConnectServer.WellKnown);
    });

    it('should have the property authorizationEndpoint (base name: "authorization_endpoint")', function() {
      // uncomment below and update the code to test the property authorizationEndpoint
      //var instane = new OryHydraCloudNativeOAuth20AndOpenIdConnectServer.WellKnown();
      //expect(instance).to.be();
    });

    it('should have the property claimsSupported (base name: "claims_supported")', function() {
      // uncomment below and update the code to test the property claimsSupported
      //var instane = new OryHydraCloudNativeOAuth20AndOpenIdConnectServer.WellKnown();
      //expect(instance).to.be();
    });

    it('should have the property idTokenSigningAlgValuesSupported (base name: "id_token_signing_alg_values_supported")', function() {
      // uncomment below and update the code to test the property idTokenSigningAlgValuesSupported
      //var instane = new OryHydraCloudNativeOAuth20AndOpenIdConnectServer.WellKnown();
      //expect(instance).to.be();
    });

    it('should have the property issuer (base name: "issuer")', function() {
      // uncomment below and update the code to test the property issuer
      //var instane = new OryHydraCloudNativeOAuth20AndOpenIdConnectServer.WellKnown();
      //expect(instance).to.be();
    });

    it('should have the property jwksUri (base name: "jwks_uri")', function() {
      // uncomment below and update the code to test the property jwksUri
      //var instane = new OryHydraCloudNativeOAuth20AndOpenIdConnectServer.WellKnown();
      //expect(instance).to.be();
    });

    it('should have the property responseTypesSupported (base name: "response_types_supported")', function() {
      // uncomment below and update the code to test the property responseTypesSupported
      //var instane = new OryHydraCloudNativeOAuth20AndOpenIdConnectServer.WellKnown();
      //expect(instance).to.be();
    });

    it('should have the property scopesSupported (base name: "scopes_supported")', function() {
      // uncomment below and update the code to test the property scopesSupported
      //var instane = new OryHydraCloudNativeOAuth20AndOpenIdConnectServer.WellKnown();
      //expect(instance).to.be();
    });

    it('should have the property subjectTypesSupported (base name: "subject_types_supported")', function() {
      // uncomment below and update the code to test the property subjectTypesSupported
      //var instane = new OryHydraCloudNativeOAuth20AndOpenIdConnectServer.WellKnown();
      //expect(instance).to.be();
    });

    it('should have the property tokenEndpoint (base name: "token_endpoint")', function() {
      // uncomment below and update the code to test the property tokenEndpoint
      //var instane = new OryHydraCloudNativeOAuth20AndOpenIdConnectServer.WellKnown();
      //expect(instance).to.be();
    });

    it('should have the property tokenEndpointAuthMethodsSupported (base name: "token_endpoint_auth_methods_supported")', function() {
      // uncomment below and update the code to test the property tokenEndpointAuthMethodsSupported
      //var instane = new OryHydraCloudNativeOAuth20AndOpenIdConnectServer.WellKnown();
      //expect(instance).to.be();
    });

    it('should have the property userinfoEndpoint (base name: "userinfo_endpoint")', function() {
      // uncomment below and update the code to test the property userinfoEndpoint
      //var instane = new OryHydraCloudNativeOAuth20AndOpenIdConnectServer.WellKnown();
      //expect(instance).to.be();
    });

  });

}));
