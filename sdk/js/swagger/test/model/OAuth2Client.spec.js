/**
 * ORY Hydra - Cloud Native OAuth 2.0 and OpenID Connect Server
 * Welcome to the ORY Hydra HTTP API documentation. You will find documentation for all HTTP APIs here. Keep in mind that this document reflects the latest branch, always. Support for versioned documentation is coming in the future.
 *
 * OpenAPI spec version: Latest
 * Contact: hi@ory.am
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OryHydraCloudNativeOAuth20AndOpenIdConnectServer);
  }
}(this, function(expect, OryHydraCloudNativeOAuth20AndOpenIdConnectServer) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OryHydraCloudNativeOAuth20AndOpenIdConnectServer.OAuth2Client();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OAuth2Client', function() {
    it('should create an instance of OAuth2Client', function() {
      // uncomment below and update the code to test OAuth2Client
      //var instane = new OryHydraCloudNativeOAuth20AndOpenIdConnectServer.OAuth2Client();
      //expect(instance).to.be.a(OryHydraCloudNativeOAuth20AndOpenIdConnectServer.OAuth2Client);
    });

    it('should have the property clientName (base name: "client_name")', function() {
      // uncomment below and update the code to test the property clientName
      //var instane = new OryHydraCloudNativeOAuth20AndOpenIdConnectServer.OAuth2Client();
      //expect(instance).to.be();
    });

    it('should have the property clientSecret (base name: "client_secret")', function() {
      // uncomment below and update the code to test the property clientSecret
      //var instane = new OryHydraCloudNativeOAuth20AndOpenIdConnectServer.OAuth2Client();
      //expect(instance).to.be();
    });

    it('should have the property clientSecretExpiresAt (base name: "client_secret_expires_at")', function() {
      // uncomment below and update the code to test the property clientSecretExpiresAt
      //var instane = new OryHydraCloudNativeOAuth20AndOpenIdConnectServer.OAuth2Client();
      //expect(instance).to.be();
    });

    it('should have the property clientUri (base name: "client_uri")', function() {
      // uncomment below and update the code to test the property clientUri
      //var instane = new OryHydraCloudNativeOAuth20AndOpenIdConnectServer.OAuth2Client();
      //expect(instance).to.be();
    });

    it('should have the property contacts (base name: "contacts")', function() {
      // uncomment below and update the code to test the property contacts
      //var instane = new OryHydraCloudNativeOAuth20AndOpenIdConnectServer.OAuth2Client();
      //expect(instance).to.be();
    });

    it('should have the property grantTypes (base name: "grant_types")', function() {
      // uncomment below and update the code to test the property grantTypes
      //var instane = new OryHydraCloudNativeOAuth20AndOpenIdConnectServer.OAuth2Client();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new OryHydraCloudNativeOAuth20AndOpenIdConnectServer.OAuth2Client();
      //expect(instance).to.be();
    });

    it('should have the property logoUri (base name: "logo_uri")', function() {
      // uncomment below and update the code to test the property logoUri
      //var instane = new OryHydraCloudNativeOAuth20AndOpenIdConnectServer.OAuth2Client();
      //expect(instance).to.be();
    });

    it('should have the property owner (base name: "owner")', function() {
      // uncomment below and update the code to test the property owner
      //var instane = new OryHydraCloudNativeOAuth20AndOpenIdConnectServer.OAuth2Client();
      //expect(instance).to.be();
    });

    it('should have the property policyUri (base name: "policy_uri")', function() {
      // uncomment below and update the code to test the property policyUri
      //var instane = new OryHydraCloudNativeOAuth20AndOpenIdConnectServer.OAuth2Client();
      //expect(instance).to.be();
    });

    it('should have the property _public (base name: "public")', function() {
      // uncomment below and update the code to test the property _public
      //var instane = new OryHydraCloudNativeOAuth20AndOpenIdConnectServer.OAuth2Client();
      //expect(instance).to.be();
    });

    it('should have the property redirectUris (base name: "redirect_uris")', function() {
      // uncomment below and update the code to test the property redirectUris
      //var instane = new OryHydraCloudNativeOAuth20AndOpenIdConnectServer.OAuth2Client();
      //expect(instance).to.be();
    });

    it('should have the property responseTypes (base name: "response_types")', function() {
      // uncomment below and update the code to test the property responseTypes
      //var instane = new OryHydraCloudNativeOAuth20AndOpenIdConnectServer.OAuth2Client();
      //expect(instance).to.be();
    });

    it('should have the property scope (base name: "scope")', function() {
      // uncomment below and update the code to test the property scope
      //var instane = new OryHydraCloudNativeOAuth20AndOpenIdConnectServer.OAuth2Client();
      //expect(instance).to.be();
    });

    it('should have the property tosUri (base name: "tos_uri")', function() {
      // uncomment below and update the code to test the property tosUri
      //var instane = new OryHydraCloudNativeOAuth20AndOpenIdConnectServer.OAuth2Client();
      //expect(instance).to.be();
    });

  });

}));
